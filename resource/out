#!/bin/bash

set -e -u

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

BRed='\033[1;31m'    # Bold red
BGreen='\033[1;32m'  # Bold Green
BBlue='\033[1;34m'   # Bold Blue
BYellow='\033[1;33m' # Bold Yellow
NC='\033[0m'         # No Color


base_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)

# source "$base_dir/resource/lib/logger.sh"
# source "$base_dir/resource/lib/error-codes.sh"

working_dir=${1:-}

if [ -z "$working_dir" ]; then
  echo "usage: $0 <path/to/source>"
  exit 1
fi

cd "$working_dir"

TMPDIR=${TMPDIR:-/tmp}
PAYLOAD=$(mktemp "$TMPDIR/bitbucket-branch-mgmt-resource-request.XXXXXX")

cat > $PAYLOAD <&0

get_config() {
  local key=${1:?config key null or not set}
  local default=${2:-}
  jq -r --arg default "$default" "$key // \$default" < "$PAYLOAD"
}

# #from the resource
bitbucket_url=$(jq -r '.source.bitbucket_url // ""' <"$PAYLOAD")
access_token=$(jq -r '.source.access_token // ""' <"$PAYLOAD")


# #from the task
get_option() {
  local key=${1:?config key null or not set}
  local default=${2:-}
  echo "$OPTIONS" | jq -r --arg default "$default" "$key // \$default"
}

params=$(get_config '.params')
if [ -z "$params" ]; then
  printf '%b[ERROR]%b %s\n' "$BRed" "$NC" "invalid PAYLOAD (missing params)"
  exit 1
fi




##do things
# convert the single command into a single element array
if echo $params | jq -e 'has("command")' >/dev/null; then
  params=$(jq -n --argjson params "$params" '{commands: [ $params ] }')
fi

#and now run thru the commands
echo "$params" | jq -c '.commands[]' | while read -r OPTIONS; do
  (
    command=$(get_option '.command')

    command_script=$base_dir/resource/commands/$command.sh
    if [ -f "$command_script" ]; then
      source "$command_script"
    else
      printf '%b[ERROR]%b %s\n' "$BRed" "$NC" "invalid PAYLOAD (unknown command: $command)"
      exit 1
    fi
  )
done


##done
jq -n \
  --arg timestamp $(date +%s) \
  '{
  version: {
    timestamp: $timestamp
  }
}' >&3
